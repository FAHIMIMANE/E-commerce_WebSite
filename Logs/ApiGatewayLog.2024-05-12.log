[2024-05-12 14:16:50 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2024-05-12 14:16:51 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.fivebeans.apigatewayservice.ApiGatewayServiceApplication : The following profiles are active: local
[2024-05-12 14:16:52 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.context.scope.GenericScope : BeanFactory id=a226d33d-5d0c-3172-901d-63e7294772db
[2024-05-12 14:16:52 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2024-05-12 14:16:53 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8765 (http)
[2024-05-12 14:16:53 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.apache.coyote.http11.Http11NioProtocol : Initializing ProtocolHandler ["http-nio-8765"]
[2024-05-12 14:16:53 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.apache.catalina.core.StandardService : Starting service [Tomcat]
[2024-05-12 14:16:53 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.38]
[2024-05-12 14:16:53 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext
[2024-05-12 14:16:53 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1888 ms
[2024-05-12 14:16:53 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.sources.URLConfigurationSource : No URLs will be polled as dynamic configuration sources.
[2024-05-12 14:16:53 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.sources.URLConfigurationSource : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2024-05-12 14:16:53 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.DynamicPropertyFactory : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3db432c2
[2024-05-12 14:16:54 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.actuate.endpoint.EndpointId : Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2024-05-12 14:16:54 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.actuate.endpoint.EndpointId : Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2024-05-12 14:16:55 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration : Check result of the [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@7c11d32}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:9411/api/v2/spans": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]
[2024-05-12 14:16:55 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar : Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
[2024-05-12 14:16:55 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.sources.URLConfigurationSource : No URLs will be polled as dynamic configuration sources.
[2024-05-12 14:16:55 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.sources.URLConfigurationSource : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2024-05-12 14:16:55 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor : Initializing ExecutorService 'applicationTaskExecutor'
[2024-05-12 14:16:57 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2024-05-12 14:16:58 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
[2024-05-12 14:16:58 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.netflix.zuul.ZuulFilterInitializer : Starting filter initializer
[2024-05-12 14:16:58 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver : Exposing 24 endpoint(s) beneath base path '/actuator'
[2024-05-12 14:16:58 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.netflix.eureka.InstanceInfoFactory : Setting initial instance status as: STARTING
[2024-05-12 14:16:58 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Initializing Eureka in region us-east-1
[2024-05-12 14:16:58 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.provider.DiscoveryJerseyProvider : Using JSON encoding codec LegacyJacksonJson
[2024-05-12 14:16:58 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.provider.DiscoveryJerseyProvider : Using JSON decoding codec LegacyJacksonJson
[2024-05-12 14:16:58 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.provider.DiscoveryJerseyProvider : Using XML encoding codec XStreamXml
[2024-05-12 14:16:58 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.provider.DiscoveryJerseyProvider : Using XML decoding codec XStreamXml
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Disable delta property : false
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Single vip registry refresh property : null
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Force full registry fetch : false
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Application is null : false
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Registered Applications size is zero : true
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Application version is -1: true
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Getting all instance registry info from the eureka server
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : The response status is 200
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Starting heartbeat executor: renew interval is: 30
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.InstanceInfoReplicator : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Discovery Client initialized at timestamp 1715519819768 with initial instances count: 0
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry : Registering application API-GATEWAY-SERVICE with eureka with status UP
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Saw local status change event StatusChangeEvent [timestamp=1715519819777, current=UP, previous=STARTING]
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_API-GATEWAY-SERVICE/172.16.226.142:api-gateway-service:8765: registering service...
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.apache.coyote.http11.Http11NioProtocol : Starting ProtocolHandler ["http-nio-8765"]
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 8765 (http) with context path ''
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration : Updating port to 8765
[2024-05-12 14:16:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_API-GATEWAY-SERVICE/172.16.226.142:api-gateway-service:8765 - registration status: 204
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.fivebeans.apigatewayservice.ApiGatewayServiceApplication : Started ApiGatewayServiceApplication in 11.681 seconds (JVM running for 13.468)
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.ChainedDynamicProperty : Flipping property: billing-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook installed for: NFLoadBalancer-PingTimer-billing-service
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.BaseLoadBalancer : Client: billing-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=billing-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : Using serverListUpdater PollingServerListUpdater
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : DynamicServerListLoadBalancer for client billing-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=billing-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2573b149
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.ChainedDynamicProperty : Flipping property: catalog-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook installed for: NFLoadBalancer-PingTimer-catalog-service
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.BaseLoadBalancer : Client: catalog-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=catalog-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : Using serverListUpdater PollingServerListUpdater
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : DynamicServerListLoadBalancer for client catalog-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=catalog-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4fef4f96
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.ChainedDynamicProperty : Flipping property: account-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook installed for: NFLoadBalancer-PingTimer-account-service
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.BaseLoadBalancer : Client: account-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=account-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : Using serverListUpdater PollingServerListUpdater
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : DynamicServerListLoadBalancer for client account-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=account-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@727f36dd
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.ChainedDynamicProperty : Flipping property: order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook installed for: NFLoadBalancer-PingTimer-order-service
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.BaseLoadBalancer : Client: order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : Using serverListUpdater PollingServerListUpdater
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : DynamicServerListLoadBalancer for client order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@75c0cd39
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.ChainedDynamicProperty : Flipping property: payment-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook installed for: NFLoadBalancer-PingTimer-payment-service
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.BaseLoadBalancer : Client: payment-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=payment-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : Using serverListUpdater PollingServerListUpdater
[2024-05-12 14:17:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : DynamicServerListLoadBalancer for client payment-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=payment-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5aeebccc
[2024-05-12 14:17:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <RMI TCP Connection(2)-26.111.141.48> org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-05-12 14:17:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <RMI TCP Connection(2)-26.111.141.48> org.springframework.web.servlet.DispatcherServlet : Initializing Servlet 'dispatcherServlet'
[2024-05-12 14:17:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <RMI TCP Connection(2)-26.111.141.48> org.springframework.web.servlet.DispatcherServlet : Completed initialization in 21 ms
[2024-05-12 14:17:29 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Disable delta property : false
[2024-05-12 14:17:29 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Single vip registry refresh property : null
[2024-05-12 14:17:29 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Force full registry fetch : false
[2024-05-12 14:17:29 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Application is null : false
[2024-05-12 14:17:29 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Registered Applications size is zero : true
[2024-05-12 14:17:29 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Application version is -1: false
[2024-05-12 14:17:29 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Getting all instance registry info from the eureka server
[2024-05-12 14:17:29 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : The response status is 200
[2024-05-12 14:18:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <PollingServerListUpdater-0> com.netflix.config.ChainedDynamicProperty : Flipping property: account-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 14:21:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 14:26:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 14:31:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 14:36:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 14:41:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 14:46:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 14:47:32 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <PollingServerListUpdater-1> com.netflix.config.ChainedDynamicProperty : Flipping property: payment-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 14:51:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 14:56:02 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <Thread-33> com.netflix.loadbalancer.PollingServerListUpdater : Shutting down the Executor Pool for PollingServerListUpdater
[2024-05-12 14:56:02 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry : Unregistering application API-GATEWAY-SERVICE with eureka with status DOWN
[2024-05-12 14:56:02 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <SpringContextShutdownHook> com.netflix.discovery.DiscoveryClient : Saw local status change event StatusChangeEvent [timestamp=1715522162686, current=DOWN, previous=UP]
[2024-05-12 14:56:02 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_API-GATEWAY-SERVICE/172.16.226.142:api-gateway-service:8765: registering service...
[2024-05-12 14:56:02 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_API-GATEWAY-SERVICE/172.16.226.142:api-gateway-service:8765 - registration status: 204
[2024-05-12 15:01:44 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2024-05-12 15:01:45 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.fivebeans.apigatewayservice.ApiGatewayServiceApplication : The following profiles are active: local
[2024-05-12 15:01:46 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.context.scope.GenericScope : BeanFactory id=a226d33d-5d0c-3172-901d-63e7294772db
[2024-05-12 15:01:47 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2024-05-12 15:01:47 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8765 (http)
[2024-05-12 15:01:47 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.apache.coyote.http11.Http11NioProtocol : Initializing ProtocolHandler ["http-nio-8765"]
[2024-05-12 15:01:47 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.apache.catalina.core.StandardService : Starting service [Tomcat]
[2024-05-12 15:01:47 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.38]
[2024-05-12 15:01:48 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext
[2024-05-12 15:01:48 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2710 ms
[2024-05-12 15:01:48 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.sources.URLConfigurationSource : No URLs will be polled as dynamic configuration sources.
[2024-05-12 15:01:48 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.sources.URLConfigurationSource : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2024-05-12 15:01:48 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.DynamicPropertyFactory : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3db432c2
[2024-05-12 15:01:49 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.actuate.endpoint.EndpointId : Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[2024-05-12 15:01:49 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.actuate.endpoint.EndpointId : Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.
[2024-05-12 15:01:50 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.sleuth.zipkin2.ZipkinAutoConfiguration : Check result of the [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@7c11d32}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:9411/api/v2/spans": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]
[2024-05-12 15:01:51 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar : Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
[2024-05-12 15:01:51 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.sources.URLConfigurationSource : No URLs will be polled as dynamic configuration sources.
[2024-05-12 15:01:51 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.sources.URLConfigurationSource : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2024-05-12 15:01:52 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor : Initializing ExecutorService 'applicationTaskExecutor'
[2024-05-12 15:01:55 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger : You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
[2024-05-12 15:01:57 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath.
[2024-05-12 15:01:58 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.netflix.zuul.ZuulFilterInitializer : Starting filter initializer
[2024-05-12 15:01:58 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver : Exposing 24 endpoint(s) beneath base path '/actuator'
[2024-05-12 15:01:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.netflix.eureka.InstanceInfoFactory : Setting initial instance status as: STARTING
[2024-05-12 15:01:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Initializing Eureka in region us-east-1
[2024-05-12 15:01:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.provider.DiscoveryJerseyProvider : Using JSON encoding codec LegacyJacksonJson
[2024-05-12 15:01:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.provider.DiscoveryJerseyProvider : Using JSON decoding codec LegacyJacksonJson
[2024-05-12 15:01:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.provider.DiscoveryJerseyProvider : Using XML encoding codec XStreamXml
[2024-05-12 15:01:59 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.provider.DiscoveryJerseyProvider : Using XML decoding codec XStreamXml
[2024-05-12 15:02:00 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 15:02:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Disable delta property : false
[2024-05-12 15:02:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Single vip registry refresh property : null
[2024-05-12 15:02:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Force full registry fetch : false
[2024-05-12 15:02:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Application is null : false
[2024-05-12 15:02:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Registered Applications size is zero : true
[2024-05-12 15:02:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Application version is -1: true
[2024-05-12 15:02:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Getting all instance registry info from the eureka server
[2024-05-12 15:02:05 WEST] ERROR [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:430)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:276)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:272)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:650)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:635)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:363)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:360)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$7b94c156.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:554)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.fivebeans.apigatewayservice.ApiGatewayServiceApplication.main(ApiGatewayServiceApplication.java:15)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 75 common frames omitted
[2024-05-12 15:02:05 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2024-05-12 15:02:05 WEST] ERROR [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : DiscoveryClient_API-GATEWAY-SERVICE/172.16.226.142:api-gateway-service:8765 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:430)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:276)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:272)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:324)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:650)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:635)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:363)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:360)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$7b94c156.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:554)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.fivebeans.apigatewayservice.ApiGatewayServiceApplication.main(ApiGatewayServiceApplication.java:15)
[2024-05-12 15:02:05 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Using default backup registry implementation which does not do anything.
[2024-05-12 15:02:05 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Starting heartbeat executor: renew interval is: 30
[2024-05-12 15:02:05 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.InstanceInfoReplicator : InstanceInfoReplicator onDemand update allowed rate per min is 4
[2024-05-12 15:02:05 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Discovery Client initialized at timestamp 1715522525586 with initial instances count: 0
[2024-05-12 15:02:05 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry : Registering application API-GATEWAY-SERVICE with eureka with status UP
[2024-05-12 15:02:05 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.discovery.DiscoveryClient : Saw local status change event StatusChangeEvent [timestamp=1715522525611, current=UP, previous=STARTING]
[2024-05-12 15:02:05 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.apache.coyote.http11.Http11NioProtocol : Starting ProtocolHandler ["http-nio-8765"]
[2024-05-12 15:02:05 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_API-GATEWAY-SERVICE/172.16.226.142:api-gateway-service:8765: registering service...
[2024-05-12 15:02:05 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.boot.web.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 8765 (http) with context path ''
[2024-05-12 15:02:05 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration : Updating port to 8765
[2024-05-12 15:02:07 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.fivebeans.apigatewayservice.ApiGatewayServiceApplication : Started ApiGatewayServiceApplication in 24.94 seconds (JVM running for 26.506)
[2024-05-12 15:02:07 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.ChainedDynamicProperty : Flipping property: billing-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 15:02:07 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook installed for: NFLoadBalancer-PingTimer-billing-service
[2024-05-12 15:02:07 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.BaseLoadBalancer : Client: billing-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=billing-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2024-05-12 15:02:07 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : Using serverListUpdater PollingServerListUpdater
[2024-05-12 15:02:07 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : DynamicServerListLoadBalancer for client billing-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=billing-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7abcc0da
[2024-05-12 15:02:07 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.ChainedDynamicProperty : Flipping property: catalog-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 15:02:07 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook installed for: NFLoadBalancer-PingTimer-catalog-service
[2024-05-12 15:02:07 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.BaseLoadBalancer : Client: catalog-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=catalog-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2024-05-12 15:02:07 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : Using serverListUpdater PollingServerListUpdater
[2024-05-12 15:02:07 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : DynamicServerListLoadBalancer for client catalog-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=catalog-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2cc97e47
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.ChainedDynamicProperty : Flipping property: account-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook installed for: NFLoadBalancer-PingTimer-account-service
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.BaseLoadBalancer : Client: account-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=account-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : Using serverListUpdater PollingServerListUpdater
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : DynamicServerListLoadBalancer for client account-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=account-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6f7b8ae1
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.ChainedDynamicProperty : Flipping property: order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook installed for: NFLoadBalancer-PingTimer-order-service
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.BaseLoadBalancer : Client: order-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : Using serverListUpdater PollingServerListUpdater
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : DynamicServerListLoadBalancer for client order-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=order-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1dadd172
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.config.ChainedDynamicProperty : Flipping property: payment-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.util.concurrent.ShutdownEnabledTimer : Shutdown hook installed for: NFLoadBalancer-PingTimer-payment-service
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.BaseLoadBalancer : Client: payment-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=payment-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : Using serverListUpdater PollingServerListUpdater
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <main> com.netflix.loadbalancer.DynamicServerListLoadBalancer : DynamicServerListLoadBalancer for client payment-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=payment-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7455204c
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <RMI TCP Connection(4)-26.111.141.48> org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] : Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <RMI TCP Connection(4)-26.111.141.48> org.springframework.web.servlet.DispatcherServlet : Initializing Servlet 'dispatcherServlet'
[2024-05-12 15:02:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <RMI TCP Connection(4)-26.111.141.48> org.springframework.web.servlet.DispatcherServlet : Completed initialization in 35 ms
[2024-05-12 15:02:10 WEST] ERROR [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
[2024-05-12 15:02:10 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2024-05-12 15:02:10 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_API-GATEWAY-SERVICE/172.16.226.142:api-gateway-service:8765 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
[2024-05-12 15:02:10 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.InstanceInfoReplicator : There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
[2024-05-12 15:02:35 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Disable delta property : false
[2024-05-12 15:02:35 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Single vip registry refresh property : null
[2024-05-12 15:02:35 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Force full registry fetch : false
[2024-05-12 15:02:35 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Application is null : false
[2024-05-12 15:02:35 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Registered Applications size is zero : true
[2024-05-12 15:02:35 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Application version is -1: true
[2024-05-12 15:02:35 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Getting all instance registry info from the eureka server
[2024-05-12 15:02:39 WEST] ERROR [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-HeartbeatExecutor-0> com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:102)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 common frames omitted
[2024-05-12 15:02:39 WEST] ERROR [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
[2024-05-12 15:02:39 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-HeartbeatExecutor-0> com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2024-05-12 15:02:39 WEST] ERROR [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-HeartbeatExecutor-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_API-GATEWAY-SERVICE/172.16.226.142:api-gateway-service:8765 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:864)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1423)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
[2024-05-12 15:02:39 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2024-05-12 15:02:39 WEST] ERROR [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_API-GATEWAY-SERVICE/172.16.226.142:api-gateway-service:8765 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1497)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1464)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
[2024-05-12 15:02:40 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_API-GATEWAY-SERVICE/172.16.226.142:api-gateway-service:8765: registering service...
[2024-05-12 15:02:44 WEST] ERROR [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient : Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:607)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 common frames omitted
[2024-05-12 15:02:44 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient : Request execution failed with message: java.net.ConnectException: Connection refused: connect
[2024-05-12 15:02:44 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_API-GATEWAY-SERVICE/172.16.226.142:api-gateway-service:8765 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
[2024-05-12 15:02:44 WEST] WARN [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-InstanceInfoReplicator-0> com.netflix.discovery.InstanceInfoReplicator : There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)
[2024-05-12 15:03:09 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Disable delta property : false
[2024-05-12 15:03:09 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Single vip registry refresh property : null
[2024-05-12 15:03:09 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Force full registry fetch : false
[2024-05-12 15:03:09 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Application is null : false
[2024-05-12 15:03:09 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Registered Applications size is zero : true
[2024-05-12 15:03:09 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Application version is -1: true
[2024-05-12 15:03:09 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Getting all instance registry info from the eureka server
[2024-05-12 15:03:09 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-HeartbeatExecutor-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_API-GATEWAY-SERVICE/172.16.226.142:api-gateway-service:8765 - Re-registering apps/API-GATEWAY-SERVICE
[2024-05-12 15:03:09 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-HeartbeatExecutor-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_API-GATEWAY-SERVICE/172.16.226.142:api-gateway-service:8765: registering service...
[2024-05-12 15:03:09 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : The response status is 200
[2024-05-12 15:03:09 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-HeartbeatExecutor-0> com.netflix.discovery.DiscoveryClient : DiscoveryClient_API-GATEWAY-SERVICE/172.16.226.142:api-gateway-service:8765 - registration status: 204
[2024-05-12 15:03:39 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Disable delta property : false
[2024-05-12 15:03:39 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Single vip registry refresh property : null
[2024-05-12 15:03:39 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Force full registry fetch : false
[2024-05-12 15:03:39 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Application is null : false
[2024-05-12 15:03:39 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Registered Applications size is zero : true
[2024-05-12 15:03:39 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Application version is -1: false
[2024-05-12 15:03:39 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : Getting all instance registry info from the eureka server
[2024-05-12 15:03:40 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <DiscoveryClient-CacheRefreshExecutor-0> com.netflix.discovery.DiscoveryClient : The response status is 200
[2024-05-12 15:04:08 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <PollingServerListUpdater-1> com.netflix.config.ChainedDynamicProperty : Flipping property: billing-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 15:04:09 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <PollingServerListUpdater-0> com.netflix.config.ChainedDynamicProperty : Flipping property: catalog-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 15:04:09 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <PollingServerListUpdater-1> com.netflix.config.ChainedDynamicProperty : Flipping property: account-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 15:04:09 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <PollingServerListUpdater-0> com.netflix.config.ChainedDynamicProperty : Flipping property: order-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 15:04:39 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <PollingServerListUpdater-0> com.netflix.config.ChainedDynamicProperty : Flipping property: payment-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[2024-05-12 15:07:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 15:12:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 15:17:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 15:22:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 15:27:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 15:32:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 15:37:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 15:42:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 15:47:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 15:52:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 15:57:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 16:02:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 16:07:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 16:12:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 16:17:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 16:22:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 16:27:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 16:32:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
[2024-05-12 16:37:01 WEST] INFO [Service Name -> api-gateway-service], [TraceId -> ], [SpanId -> ] 
      <AsyncResolver-bootstrap-executor-0> com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver : Resolving eureka endpoints via configuration
